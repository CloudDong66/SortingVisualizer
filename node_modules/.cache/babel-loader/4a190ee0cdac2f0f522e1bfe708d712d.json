{"ast":null,"code":"export function getSelectionSortAnimations(array) {\n  const animations = [];\n  let counter = 0;\n\n  for (let i = counter; i < array.length - 1; i++) {\n    let smallest = i;\n\n    for (let j = 1 + counter; j < array.length; j++) {\n      if (array[j] < array[smallest]) {\n        smallest = j;\n      }\n    }\n\n    animations.push([smallest, counter]);\n    animations.push([smallest, counter]);\n    animations.push([smallest, counter]);\n    swap(smallest, counter, array);\n    counter++;\n  }\n\n  return animations;\n}\n\nfunction swap(i, j, array) {\n  let temp = array[j];\n  array[j] = array[i];\n  array[i] = temp;\n}","map":{"version":3,"sources":["/Users/clouddong/Dev/sorting_visualizer/src/sortingAlgorithms/selectionSort.js"],"names":["getSelectionSortAnimations","array","animations","counter","i","length","smallest","j","push","swap","temp"],"mappings":"AAAA,OAAO,SAASA,0BAAT,CAAoCC,KAApC,EAA2C;AAC9C,QAAMC,UAAU,GAAG,EAAnB;AACA,MAAIC,OAAO,GAAG,CAAd;;AACA,OAAK,IAAIC,CAAC,GAAGD,OAAb,EAAsBC,CAAC,GAAGH,KAAK,CAACI,MAAN,GAAe,CAAzC,EAA4CD,CAAC,EAA7C,EAAiD;AAC7C,QAAIE,QAAQ,GAAGF,CAAf;;AACA,SAAK,IAAIG,CAAC,GAAG,IAAIJ,OAAjB,EAA0BI,CAAC,GAAGN,KAAK,CAACI,MAApC,EAA4CE,CAAC,EAA7C,EAAiD;AAC7C,UAAIN,KAAK,CAACM,CAAD,CAAL,GAAWN,KAAK,CAACK,QAAD,CAApB,EAAgC;AAC5BA,QAAAA,QAAQ,GAAGC,CAAX;AACH;AACJ;;AACDL,IAAAA,UAAU,CAACM,IAAX,CAAgB,CAACF,QAAD,EAAWH,OAAX,CAAhB;AACAD,IAAAA,UAAU,CAACM,IAAX,CAAgB,CAACF,QAAD,EAAWH,OAAX,CAAhB;AACAD,IAAAA,UAAU,CAACM,IAAX,CAAgB,CAACF,QAAD,EAAWH,OAAX,CAAhB;AACAM,IAAAA,IAAI,CAACH,QAAD,EAAWH,OAAX,EAAoBF,KAApB,CAAJ;AACAE,IAAAA,OAAO;AACV;;AACD,SAAOD,UAAP;AACH;;AAED,SAASO,IAAT,CAAcL,CAAd,EAAiBG,CAAjB,EAAoBN,KAApB,EAA2B;AACvB,MAAIS,IAAI,GAAGT,KAAK,CAACM,CAAD,CAAhB;AACAN,EAAAA,KAAK,CAACM,CAAD,CAAL,GAAWN,KAAK,CAACG,CAAD,CAAhB;AACAH,EAAAA,KAAK,CAACG,CAAD,CAAL,GAAWM,IAAX;AACH","sourcesContent":["export function getSelectionSortAnimations(array) {\n    const animations = []\n    let counter = 0;\n    for (let i = counter; i < array.length - 1; i++) {\n        let smallest = i;\n        for (let j = 1 + counter; j < array.length; j++) {\n            if (array[j] < array[smallest]) {\n                smallest = j;\n            }\n        }\n        animations.push([smallest, counter]);\n        animations.push([smallest, counter]);\n        animations.push([smallest, counter]);\n        swap(smallest, counter, array);\n        counter++;\n    }\n    return animations;\n}\n\nfunction swap(i, j, array) {\n    let temp = array[j];\n    array[j] = array[i];\n    array[i] = temp;\n}"]},"metadata":{},"sourceType":"module"}