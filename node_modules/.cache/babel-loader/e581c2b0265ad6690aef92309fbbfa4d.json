{"ast":null,"code":"export function getBubbleSortAnimations(array) {\n  const animations = [];\n  let isSorted = false;\n  let counter = 0;\n\n  while (!isSorted) {\n    isSorted = true;\n\n    for (let i = 0; i < array.length - 1 - counter; i++) {\n      if (array[i] > array[i + 1]) {\n        animations.push([i, i + 1]);\n        animations.push([i, i + 1]);\n        animations.push([i, i + 1]);\n        swap(i, i + 1, array);\n        isSorted = false;\n      }\n    }\n\n    counter++;\n  }\n\n  return animations;\n}\n\nfunction swap(i, j, array) {\n  let temp = array[j];\n  array[j] = array[i];\n  array[i] = temp;\n}","map":{"version":3,"sources":["/Users/clouddong/Dev/sorting_visualizer/src/sortingAlgorithms/bubbleSort.js"],"names":["getBubbleSortAnimations","array","animations","isSorted","counter","i","length","push","swap","j","temp"],"mappings":"AAAA,OAAO,SAASA,uBAAT,CAAiCC,KAAjC,EAAwC;AAC3C,QAAMC,UAAU,GAAG,EAAnB;AACA,MAAIC,QAAQ,GAAG,KAAf;AACA,MAAIC,OAAO,GAAG,CAAd;;AACA,SAAO,CAACD,QAAR,EAAkB;AACdA,IAAAA,QAAQ,GAAG,IAAX;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAAN,GAAe,CAAf,GAAmBF,OAAvC,EAAgDC,CAAC,EAAjD,EAAqD;AACjD,UAAIJ,KAAK,CAACI,CAAD,CAAL,GAAWJ,KAAK,CAACI,CAAC,GAAG,CAAL,CAApB,EAA6B;AACzBH,QAAAA,UAAU,CAACK,IAAX,CAAgB,CAACF,CAAD,EAAIA,CAAC,GAAG,CAAR,CAAhB;AACAH,QAAAA,UAAU,CAACK,IAAX,CAAgB,CAACF,CAAD,EAAIA,CAAC,GAAG,CAAR,CAAhB;AACAH,QAAAA,UAAU,CAACK,IAAX,CAAgB,CAACF,CAAD,EAAIA,CAAC,GAAG,CAAR,CAAhB;AACAG,QAAAA,IAAI,CAACH,CAAD,EAAIA,CAAC,GAAG,CAAR,EAAWJ,KAAX,CAAJ;AACAE,QAAAA,QAAQ,GAAG,KAAX;AACH;AACJ;;AACDC,IAAAA,OAAO;AACV;;AACD,SAAOF,UAAP;AACH;;AAED,SAASM,IAAT,CAAcH,CAAd,EAAiBI,CAAjB,EAAoBR,KAApB,EAA2B;AACvB,MAAIS,IAAI,GAAGT,KAAK,CAACQ,CAAD,CAAhB;AACAR,EAAAA,KAAK,CAACQ,CAAD,CAAL,GAAWR,KAAK,CAACI,CAAD,CAAhB;AACAJ,EAAAA,KAAK,CAACI,CAAD,CAAL,GAAWK,IAAX;AACH","sourcesContent":["export function getBubbleSortAnimations(array) {\n    const animations = [];\n    let isSorted = false;\n    let counter = 0;\n    while (!isSorted) {\n        isSorted = true;\n        for (let i = 0; i < array.length - 1 - counter; i++) {\n            if (array[i] > array[i + 1]) {\n                animations.push([i, i + 1]);\n                animations.push([i, i + 1]);\n                animations.push([i, i + 1]);\n                swap(i, i + 1, array);\n                isSorted = false;\n            }\n        }\n        counter++;\n    }\n    return animations;\n}\n\nfunction swap(i, j, array) {\n    let temp = array[j];\n    array[j] = array[i];\n    array[i] = temp;\n}"]},"metadata":{},"sourceType":"module"}